{"version":3,"sources":["webpack:///./src/app/auth/auth-guard.service.ts","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.css","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.html","webpack:///./src/app/recipes/recipe-detail/recipe-detail.component.ts","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.css","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.html","webpack:///./src/app/recipes/recipe-edit/recipe-edit.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.css","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.html","webpack:///./src/app/recipes/recipe-list/recipe-item/recipe-item.component.ts","webpack:///./src/app/recipes/recipe-list/recipe-list.component.css","webpack:///./src/app/recipes/recipe-list/recipe-list.component.html","webpack:///./src/app/recipes/recipe-list/recipe-list.component.ts","webpack:///./src/app/recipes/recipe-start/recipe-start.component.css","webpack:///./src/app/recipes/recipe-start/recipe-start.component.html","webpack:///./src/app/recipes/recipe-start/recipe-start.component.ts","webpack:///./src/app/recipes/recipes-route.ts","webpack:///./src/app/recipes/recipes.component.css","webpack:///./src/app/recipes/recipes.component.html","webpack:///./src/app/recipes/recipes.component.ts","webpack:///./src/app/recipes/recipes.module.ts"],"names":[],"mappings":"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","file":"recipes-recipes-module.js","sourcesContent":["import { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot } from \"@angular/router\";\r\nimport { AuthService } from \"./auth.service\";\r\nimport { Injectable } from \"@angular/core\";\r\n\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate{\r\n\r\n    constructor(private authServ:AuthService){}\r\n\r\n    canActivate(route : ActivatedRouteSnapshot , state : RouterStateSnapshot){\r\n        return this.authServ.isAuthenticated();\r\n    }\r\n}","module.exports = \"\"","module.exports = \"<br>\\n<br>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        <img [src]=\\\"itemSelected.imgPath\\\" class=\\\"img-responsive\\\" alt=\\\"max-height=20px\\\">\\n    </div>\\n</div>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-md-12\\\">\\n    <h2>{{ itemSelected.name }}</h2>\\n  </div>\\n</div>\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-md-12 btn-group\\\" appDropdown>\\n      <button class=\\\"btn btn-primary dropdown-toggle\\\" >Manage <span class=\\\"caret\\\"></span></button>\\n      <ul class=\\\"dropdown-menu\\\">\\n        <li><a  (click) =\\\"addRecipeItemsToShopList()\\\" style=\\\"cursor: pointer;\\\">Add to shop List</a></li>\\n        <li><a [routerLink]=\\\"['edit']\\\" style=\\\"cursor: pointer;\\\">Edit Recipe</a></li>\\n        <li><a   (click) =\\\"deleteRecipe()\\\" style=\\\"cursor: pointer;\\\">Delete Recipe</a></li>\\n      </ul>\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n        {{ itemSelected.description }}\\n    </div>\\n  </div>\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"list-group\\\">\\n        <div *ngFor=\\\"let item of itemSelected.Ingredient\\\">\\n            <a class=\\\"list-group-item\\\" style=\\\"cursor: pointer\\\">\\n              <h4 class=\\\"list-group-item-heading\\\">{{ item.itemName }}</h4>\\n              <div class=\\\"row\\\">\\n                  <p class=\\\"list-group-item-text col-md-4\\\">{{ item.itemDescp }}</p>\\n                  <p class=\\\"list-group-item-text col-md-4\\\">Rs : {{ item.itemPrice }}</p>\\n              </div>\\n            </a>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { Recipe } from '../recipes.model';\nimport { ShoppingService } from './../../shopping-list/shoppinglist.service';\nimport { Route, Router, ActivatedRoute, Params } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { FormGroup, FormControl } from '@angular/forms';\n\n@Component({\n  selector: 'app-recipe-detail',\n  templateUrl: './recipe-detail.component.html',\n  styleUrls: ['./recipe-detail.component.css']\n})\nexport class RecipeDetailComponent implements OnInit {\n  itemSelected : Recipe;\n  id:number;\n  constructor(private shopListService : ShoppingService ,private route:ActivatedRoute,private recipeSer : RecipeService,\n    private router:Router\n  ) { }\n\n  ngOnInit() {\n    //console.log(this.itemSelected);\n    //console.log(this.route.params);\n    \n    this.route.params\n      .subscribe( \n        (params : Params)=>{\n          this.id = params[\"id\"];\n          this.itemSelected = this.recipeSer.getRecipeItemFromId(this.id);\n        }\n       \n       );\n  }\n  addRecipeItemsToShopList(){\n    this.shopListService.addItemsToShop(this.itemSelected.Ingredient);\n  }\n\n  deleteRecipe(){\n    console.log(this.id);\n    this.recipeSer.deleteRecipe(this.id);\n    this.router.navigate(['/recipes']);\n  }\n\n\n\n}\n","module.exports = \"\\r\\n\\r\\n#indg_header{\\r\\n    font-weight: bold;\\r\\n}\\r\\n\\r\\ninput.ng-invalid.ng-touched{\\r\\n    border: 1px solid red\\r\\n}\"","module.exports = \"<div class=\\\"row\\\">\\n  <form [formGroup]=\\\"RecipeForm\\\" (ngSubmit)=\\\"onSubmit()\\\">\\n    <div class=\\\"row\\\">\\n    <div class=\\\"col-md-12\\\">\\n      <div class=\\\"form-group\\\">\\n          <button class=\\\"btn btn-success\\\" [disabled]=\\\"!RecipeForm.valid\\\" type=\\\"submit\\\" name=\\\"submit\\\">Save</button>\\n          <button class=\\\"btn btn-danger\\\" (click)=\\\"onCancel()\\\" type=\\\"button\\\" name=\\\"cancel\\\">Cancel</button> \\n      </div>\\n    </div>\\n  </div>\\n    <div class=\\\"row\\\">\\n      <div  class=\\\"col-md-12\\\" >\\n        <div class=\\\"form-group\\\">\\n            <label for=\\\"name\\\">Name</label>\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"name\\\">\\n        </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n      <div  class=\\\"col-md-12\\\" >\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"image\\\">Image URL</label>\\n              <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"imgPath\\\" #imgPath>\\n              \\n          </div>\\n      </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div  class=\\\"col-md-12\\\" >\\n          <img [src]=\\\"imgPath.value\\\" class=\\\"img-responsive\\\">\\n        </div>\\n    </div> \\n    <div class=\\\"row\\\">\\n      <div  class=\\\"col-md-12\\\" >\\n          <div class=\\\"form-group\\\">\\n              <label for=\\\"Description\\\">Description</label>\\n              <textarea\\n              type=\\\"text\\\"\\n              id=\\\"description\\\"\\n              class=\\\"form-control\\\"\\n              rows=\\\"6\\\"\\n              formControlName=\\\"description\\\"\\n              >\\n              </textarea>\\n          </div>\\n      </div>\\n    </div> \\n    <div class=\\\"row\\\">\\n      <div  class=\\\"col-md-12\\\" formArrayName=\\\"Ingredient\\\">\\n          <div id=\\\"indg_header\\\">Ingredients Used</div>\\n          <div class=\\\"row col-md-4\\\" id=\\\"indg_header\\\">ItemName</div>  \\n          <div class=\\\"row col-md-4\\\" id=\\\"indg_header\\\">Decription</div>\\n          <div class=\\\"row col-md-4\\\" id=\\\"indg_header\\\">Price</div>\\n          <div class=\\\"row\\\" *ngFor=\\\"let indg of getControls();let i = index\\\" [formGroupName]=\\\"i\\\" style=\\\"margin-top: 10px\\\">\\n              <div class=\\\"col-md-4\\\">\\n                <input class=\\\"\\\" type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"itemName\\\">\\n              </div>\\n              <div class=\\\"col-md-4\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\" formControlName=\\\"itemDescp\\\">\\n              </div>\\n              <div class=\\\"col-md-2\\\">\\n                <input type=\\\"number\\\" class=\\\"form-control\\\" formControlName=\\\"itemPrice\\\">\\n              </div>  \\n              <div class=\\\"col-md-2\\\">\\n                <button type=\\\"button\\\" class=\\\"btn btn-danger\\\" (click)=\\\"onIndgDelete(i)\\\">X</button>\\n              </div>  \\n          </div>\\n          <div class=\\\"row\\\" style=\\\"margin-top: 10px\\\">\\n              <div class=\\\"col-md-2\\\">\\n                  <button type=\\\"button\\\" class=\\\"btn btn-success\\\" (click)=\\\"onAddIndg()\\\">Add Ingredients</button>\\n              </div>      \\n          </div>\\n      </div>\\n    </div>\\n  </form>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Params, Router } from '@angular/router';\nimport { RecipeService } from '../recipe.service';\nimport { Recipe } from '../recipes.model'; \nimport { FormGroup, FormControl, FormArray, Validators } from '@angular/forms';\n\n@Component({\n  selector: 'app-recipe-edit',\n  templateUrl: './recipe-edit.component.html',\n  styleUrls: ['./recipe-edit.component.css']\n})\nexport class RecipeEditComponent implements OnInit {\n  id : number;\n  itemSelected : Recipe;\n  RecipeForm:FormGroup;\n  editMode=false;\n  constructor(private route:ActivatedRoute,private recipeSer : RecipeService,private router:Router) { }\n\n  ngOnInit() {\n    this.route.params\n      .subscribe( \n        (params : Params)=>{\n          this.id = +params[\"id\"];\n          if(params[\"id\"]!=null){\n            this.editMode=true\n            this.itemSelected = this.recipeSer.getRecipeItemFromId(this.id);\n            console.log(this.itemSelected);\n            console.log(\"edit this item\");\n            this.initForm();\n          }\n          else{\n            this.editMode=false;\n            console.log(\"It's a new item call\");\n            this.initForm();\n          }\n          \n        }\n       \n       );\n  }\n\n  private initForm(){\n\n    let name='';\n    let image='';\n    let descp='';\n    let recipeIndg= new FormArray([]);\n\n    if(this.editMode){\n      name = this.itemSelected.name,\n      image = this.itemSelected.imgPath,\n      descp = this.itemSelected.description\n      if(this.itemSelected.Ingredient){\n        for(let ind of this.itemSelected.Ingredient){\n          recipeIndg.push(\n            new FormGroup\n            ({\n                'itemName' : new FormControl(ind.itemName,[Validators.required]),\n                'itemDescp' : new FormControl(ind.itemDescp,[Validators.required]),\n            'itemPrice': new FormControl(ind.itemPrice,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)]),\n            })\n          )\n        }\n      }\n    }\n\n    this.RecipeForm = new FormGroup({\n      'name' : new FormControl(name,Validators.required),\n      'imgPath': new FormControl(image,Validators.required),\n      'description' : new FormControl(descp,Validators.required),\n      'Ingredient' : recipeIndg\n    });\n  }\n\n  onSubmit(){\n    console.log(\"submit\");\n    console.log(this.RecipeForm);\n    if(this.editMode){\n      this.recipeSer.updateRecipe(this.id,this.RecipeForm.value);\n    }\n    else{\n      this.recipeSer.addRecipe(this.RecipeForm.value);\n    }\n    this.router.navigate(['/recipes']);\n\n  }\n  onIndgDelete(indgIndex:number){\n    console.log(\"delete indg : \"+indgIndex);\n    (<FormArray>this.RecipeForm.get('Ingredient')).removeAt(indgIndex);\n  }\n  onAddIndg(){\n    console.log(\"add Indg\");\n    (<FormArray>this.RecipeForm.get('Ingredient')).push(\n      new FormGroup({\n        'itemName' : new FormControl(null,[Validators.required]),\n        'itemDescp' : new FormControl(null,[Validators.required]),\n        'itemPrice': new FormControl(null,[Validators.required,Validators.pattern(/^[1-9]+[0-9]*$/)]),\n      })\n    );\n  }\n\n  onCancel(){\n    this.router.navigate(['../'],{ relativeTo : this.route});\n    }\n\n\n    getControls() {\n      return (<FormArray>this.RecipeForm.get('ingredients')).controls;\n  }\n\n\n\n}\n","module.exports = \"\"","module.exports = \"<div>\\n    \\n    <a \\n        [routerLink]=\\\"[index]\\\"\\n        routerLinkActive=\\\"active\\\"\\n        style=\\\"cursor: pointer;\\\" \\n        class=\\\"list-group-item row\\\">\\n        <div class=\\\"pull-left\\\">\\n                <h4 class=\\\"list-group-item-heading\\\">{{ item.name }}</h4>\\n                <p class=\\\"col-xs-12 list-group-item-text\\\" >{{ item.description }}</p>\\n        </div>\\n        <span class=\\\"pull-right\\\">\\n            <img [src]=\\\"item.imgPath\\\" style=\\\"max-height:100px;clear:right\\\" class=\\\"img-responsive clearfix\\\">\\n        </span>\\n    </a>\\n</div>\\n\"","import { Component, OnInit,Input } from '@angular/core';\nimport { Recipe } from '../../recipes.model'\nimport { RecipeService } from './../../recipe.service';\n\n\n@Component({\n  selector: 'app-recipe-item',\n  templateUrl: './recipe-item.component.html',\n  styleUrls: ['./recipe-item.component.css']\n})\nexport class RecipeItemComponent implements OnInit {\n  @Input() item : Recipe;\n  @Input() index : number;\n  constructor(private recipeSer:RecipeService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-xs-12\\\">\\n        <button class=\\\"btn btn-primary\\\" (click)=\\\"addNewRecipe()\\\">Add New Recipe</button>\\n    </div>\\n</div>\\n<hr>\\n<div class=\\\"row\\\">\\n  <div class=\\\"col-xs-12\\\">\\n        <div class=\\\"list-group\\\">\\n            <div *ngFor = \\\"let item of recipe;index as i\\\">\\n                <app-recipe-item [item]=\\\"item\\\" [index]=\\\"i\\\"></app-recipe-item>\\n            </div>\\n        </div>\\n   </div>\\n</div>\\n<br>\\n\"","import { Component, OnInit, OnDestroy } from '@angular/core';\nimport { Recipe } from '../recipes.model';\nimport { RecipeService } from './../recipe.service';\nimport { Route, Router, ActivatedRoute } from '@angular/router';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-recipe-list',\n  templateUrl: './recipe-list.component.html',\n  styleUrls: ['./recipe-list.component.css']\n})\nexport class RecipeListComponent implements OnInit,OnDestroy {\n\n  recipe : Recipe[] ;\n  recipeSub:Subscription;\n\n  constructor(private recipeSer:RecipeService ,private router:Router ,private route:ActivatedRoute) { }\n\n  ngOnInit() {\n    this.recipeSub = this.recipeSer.recipeChanged\n      .subscribe(\n        (recipe:Recipe[])=>{\n          this.recipe = recipe;\n        }\n      )\n    this.recipe  = this.recipeSer.getRecipe();\n  }\n\n  listItemClicked(index : number){\n   // console.log(index);\n    this.router.navigate([index],{ relativeTo : this.route});\n  }\n  addNewRecipe(){\n    this.router.navigate(['new'],{ relativeTo : this.route});\n  }\n\n  ngOnDestroy(){\n    this.recipeSub.unsubscribe();\n  }\n  \n}\n","module.exports = \"\"","module.exports = \"<p>\\n  Please select a recipe!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-recipe-start',\n  templateUrl: './recipe-start.component.html',\n  styleUrls: ['./recipe-start.component.css']\n})\nexport class RecipeStartComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","import { NgModule } from \"@angular/core\";\r\nimport { Routes , RouterModule } from \"@angular/router\";\r\n\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { AuthGuard } from '../auth/auth-guard.service';\r\n\r\nconst recipesRoutes  : Routes = [\r\n  //  { path : '' ,redirectTo : '/recipes'  ,pathMatch:'full'},  \r\n    { path :'' ,component : RecipesComponent ,\r\n    children:[\r\n        \r\n        { path : '' ,component : RecipeStartComponent },       \r\n        { path : 'new' ,component: RecipeEditComponent ,  canActivate : [AuthGuard] },\r\n        { path : ':id' ,component : RecipeDetailComponent },\r\n        { path : ':id/edit' ,component : RecipeEditComponent , canActivate : [AuthGuard] },    \r\n        \r\n    ]}\r\n]\r\n\r\n\r\n@NgModule({\r\n\r\n    imports:[\r\n        RouterModule.forChild(recipesRoutes)\r\n    ],\r\n    exports:[\r\n        RouterModule\r\n    ],\r\n    providers : [AuthGuard]\r\n})\r\n\r\n\r\nexport class RecipesRouter{\r\n\r\n}","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-5\\\">\\n            <app-recipe-list></app-recipe-list>\\n        </div>\\n        <div class=\\\"col-md-6 col-md-offset-1\\\">\\n             <router-outlet></router-outlet>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\n\nimport { RecipeService } from './recipe.service';\n\n\n@Component({\n  selector: 'app-recipes',\n  templateUrl: './recipes.component.html',\n  styleUrls: ['./recipes.component.css']\n})\n\nexport class RecipesComponent implements OnInit {\n\n  constructor() { \n\n  }\n\n  ngOnInit() {\n\n  }\n\n}\n","\r\n\r\nimport { NgModule } from \"@angular/core\";\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\nimport { RecipesComponent } from './recipes.component';\r\nimport { RecipeListComponent } from './recipe-list/recipe-list.component';\r\nimport { RecipeDetailComponent } from './recipe-detail/recipe-detail.component';\r\nimport { RecipeItemComponent } from './recipe-list/recipe-item/recipe-item.component';\r\nimport { RecipeStartComponent } from './recipe-start/recipe-start.component';\r\nimport { RecipeEditComponent } from './recipe-edit/recipe-edit.component';\r\nimport { RecipesRouter } from \"./recipes-route\";\r\nimport { CommonModule } from \"@angular/common\";\r\nimport { SharedModule } from \"../shared/shared.module\";\r\n\r\n\r\n\r\n@NgModule({\r\n    declarations:[\r\n        RecipesComponent,\r\n        RecipeListComponent,\r\n        RecipeDetailComponent,\r\n        RecipeItemComponent,\r\n        RecipeStartComponent,\r\n        RecipeEditComponent\r\n        \r\n    ],\r\n    imports:[\r\n        CommonModule,\r\n        ReactiveFormsModule,\r\n        RecipesRouter,\r\n        SharedModule\r\n    ]\r\n})\r\nexport class RecipesModule{\r\n\r\n}"],"sourceRoot":""}